{"ast":null,"code":"var _jsxFileName = \"/Users/gianmarcopow-sang/Documents/programming_personal/mind-plate-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Output from \"./components/Output\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [thoughts, setThoughts] = useState([{\n    content: \"Update Ableton\",\n    isAllowed: false,\n    timeBased: false,\n    conditionBased: false,\n    id: 1,\n    dependencies: []\n  }, {\n    content: \"Replace External Drive\",\n    isAllowed: true,\n    timeBased: false,\n    conditionBased: false,\n    id: 2,\n    dependencies: []\n  }]);\n  const [input, setInput] = useState(\"\");\n\n  const addThought = newThought => {\n    // left makes sure there is text, right removes excess spaces\n    if (!newThought.content || /^\\s*$/.test(newThought.content)) {\n      return;\n    }\n\n    const newThoughts = [newThought, ...thoughts];\n    setThoughts(newThoughts);\n    console.log(newThoughts);\n  };\n\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  }; // This is passed onto the form after the return to prevent the page from reloading when submitted\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addThought({\n      content: input,\n      isAllowed: true,\n      timeBased: false,\n      conditionBased: false,\n      id: Math.floor(Math.random() * 10000),\n      dependencies: []\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col space-y-8 px-10 mx-10 text-left place-content-center border-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Thoughts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a thought\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"thought-button\",\n        children: \"Add Thought\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      thoughts: thoughts,\n      setThoughts: setThoughts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      thoughts: thoughts,\n      setThoughts: setThoughts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OfGRcb2TgPQ4yf5pehKxQWPmLho=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Input","Output","App","thoughts","setThoughts","content","isAllowed","timeBased","conditionBased","id","dependencies","input","setInput","addThought","newThought","test","newThoughts","console","log","inputRef","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","Math","floor","random"],"sources":["/Users/gianmarcopow-sang/Documents/programming_personal/mind-plate-project/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Output from \"./components/Output\";\n\nfunction App() {\n  const [thoughts, setThoughts] = useState([\n    {\n      content: \"Update Ableton\",\n      isAllowed: false,\n      timeBased: false,\n      conditionBased: false,\n      id: 1,\n      dependencies: [],\n    },\n    {\n      content: \"Replace External Drive\",\n      isAllowed: true,\n      timeBased: false,\n      conditionBased: false,\n      id: 2,\n      dependencies: [],\n    },\n  ]);\n\n  const [input, setInput] = useState(\"\");\n\n  const addThought = (newThought) => {\n    // left makes sure there is text, right removes excess spaces\n    if (!newThought.content || /^\\s*$/.test(newThought.content)) {\n      return;\n    }\n    const newThoughts = [newThought, ...thoughts];\n    setThoughts(newThoughts);\n    console.log(newThoughts);\n  };\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // This is passed onto the form after the return to prevent the page from reloading when submitted\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addThought({\n      content: input,\n      isAllowed: true,\n      timeBased: false,\n      conditionBased: false,\n      id: Math.floor(Math.random() * 10000),\n      dependencies: [],\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-8 px-10 mx-10 text-left place-content-center border-black\">\n      <div>Thoughts</div>\n      <form className=\"todo-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Add a thought\"\n          value={input}\n          name=\"text\"\n          className=\"todo-input\"\n          onChange={handleChange}\n          ref={inputRef}\n        />\n        <button className=\"thought-button\">Add Thought</button>\n      </form>\n      <Input thoughts={thoughts} setThoughts={setThoughts} />\n      <Output thoughts={thoughts} setThoughts={setThoughts} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CACvC;IACEQ,OAAO,EAAE,gBADX;IAEEC,SAAS,EAAE,KAFb;IAGEC,SAAS,EAAE,KAHb;IAIEC,cAAc,EAAE,KAJlB;IAKEC,EAAE,EAAE,CALN;IAMEC,YAAY,EAAE;EANhB,CADuC,EASvC;IACEL,OAAO,EAAE,wBADX;IAEEC,SAAS,EAAE,IAFb;IAGEC,SAAS,EAAE,KAHb;IAIEC,cAAc,EAAE,KAJlB;IAKEC,EAAE,EAAE,CALN;IAMEC,YAAY,EAAE;EANhB,CATuC,CAAD,CAAxC;EAmBA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMgB,UAAU,GAAIC,UAAD,IAAgB;IACjC;IACA,IAAI,CAACA,UAAU,CAACT,OAAZ,IAAuB,QAAQU,IAAR,CAAaD,UAAU,CAACT,OAAxB,CAA3B,EAA6D;MAC3D;IACD;;IACD,MAAMW,WAAW,GAAG,CAACF,UAAD,EAAa,GAAGX,QAAhB,CAApB;IACAC,WAAW,CAACY,WAAD,CAAX;IACAC,OAAO,CAACC,GAAR,CAAYF,WAAZ;EACD,CARD;;EAUA,MAAMG,QAAQ,GAAGrB,MAAM,CAAC,IAAD,CAAvB;EAEAC,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;EACD,CAFQ,CAAT;;EAIA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACD,CAFD,CAtCa,CA0Cb;;;EACA,MAAMC,YAAY,GAAIH,CAAD,IAAO;IAC1BA,CAAC,CAACI,cAAF;IACAd,UAAU,CAAC;MACTR,OAAO,EAAEM,KADA;MAETL,SAAS,EAAE,IAFF;MAGTC,SAAS,EAAE,KAHF;MAITC,cAAc,EAAE,KAJP;MAKTC,EAAE,EAAEmB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CALK;MAMTpB,YAAY,EAAE;IANL,CAAD,CAAV;IAQAE,QAAQ,CAAC,EAAD,CAAR;EACD,CAXD;;EAaA,oBACE;IAAK,SAAS,EAAC,iFAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,WAAhB;MAA4B,QAAQ,EAAEc,YAAtC;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,eAFd;QAGE,KAAK,EAAEf,KAHT;QAIE,IAAI,EAAC,MAJP;QAKE,SAAS,EAAC,YALZ;QAME,QAAQ,EAAEW,YANZ;QAOE,GAAG,EAAEH;MAPP;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAQ,SAAS,EAAC,gBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAcE,QAAC,KAAD;MAAO,QAAQ,EAAEhB,QAAjB;MAA2B,WAAW,EAAEC;IAAxC;MAAA;MAAA;MAAA;IAAA,QAdF,eAeE,QAAC,MAAD;MAAQ,QAAQ,EAAED,QAAlB;MAA4B,WAAW,EAAEC;IAAzC;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GA3EQF,G;;KAAAA,G;AA6ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
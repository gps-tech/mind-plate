{"ast":null,"code":"var _jsxFileName = \"/Users/gianmarcopow-sang/Documents/programming_personal/mind-plate-project/src/components/Check.js\";\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Check(props) {\n  const {\n    todos,\n    setTodos\n  } = props;\n\n  const addTodo = todo => {\n    // left makes sure there is text, right removes excess spaces\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos); // console.log(todo, ...todos);\n  };\n\n  const updateTodo = (todoID, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoID ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      // this is toggling between true and false\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 pt-20\",\n      for: \"grid-first-name\",\n      children: \"Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Check;\nexport default Check;\n\nvar _c;\n\n$RefreshReg$(_c, \"Check\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","Check","props","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoID","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"sources":["/Users/gianmarcopow-sang/Documents/programming_personal/mind-plate-project/src/components/Check.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nfunction Check(props) {\n  const { todos, setTodos } = props;\n\n  const addTodo = (todo) => {\n    // left makes sure there is text, right removes excess spaces\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    // console.log(todo, ...todos);\n  };\n\n  const updateTodo = (todoID, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoID ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      // this is toggling between true and false\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div className=\"border-black\">\n      <h1\n        className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 pt-20\"\n        for=\"grid-first-name\"\n      >\n        Conditions\n      </h1>\n      <TodoForm onSubmit={addTodo} />\n      {/* <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      /> */}\n    </div>\n  );\n}\n\nexport default Check;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBF,KAA5B;;EAEA,MAAMG,OAAO,GAAIC,IAAD,IAAU;IACxB;IACA,IAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;MACzC;IACD;;IAED,MAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;IAEAC,QAAQ,CAACK,QAAD,CAAR,CARwB,CASxB;EACD,CAVD;;EAYA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;IACvC,IAAI,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,EAAmD;MACjD;IACD;;IAEDH,QAAQ,CAAES,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAApD,CADM,CAAR;EAGD,CARD;;EAUA,MAAME,UAAU,GAAID,EAAD,IAAQ;IACzB,MAAME,SAAS,GAAG,CAAC,GAAGf,KAAJ,EAAWgB,MAAX,CAAmBb,IAAD,IAAUA,IAAI,CAACU,EAAL,KAAYA,EAAxC,CAAlB;IACAZ,QAAQ,CAACc,SAAD,CAAR;EACD,CAHD;;EAKA,MAAME,YAAY,GAAIJ,EAAD,IAAQ;IAC3B,IAAIK,YAAY,GAAGlB,KAAK,CAACW,GAAN,CAAWR,IAAD,IAAU;MACrC;MACA,IAAIA,IAAI,CAACU,EAAL,KAAYA,EAAhB,EAAoB;QAClBV,IAAI,CAACgB,UAAL,GAAkB,CAAChB,IAAI,CAACgB,UAAxB;MACD;;MACD,OAAOhB,IAAP;IACD,CANkB,CAAnB;IAOAF,QAAQ,CAACiB,YAAD,CAAR;EACD,CATD;;EAWA,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACE;MACE,SAAS,EAAC,0EADZ;MAEE,GAAG,EAAC,iBAFN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,QAAD;MAAU,QAAQ,EAAEhB;IAApB;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;KA1DQJ,K;AA4DT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}